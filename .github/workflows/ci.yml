name: Build and Test PIUIO Kernel Module

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build-and-test:
    name: Build and Test Kernel Module on Multiple Kernels
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        kernel_version: [native, "6.2.0-39-generic", "5.15.0-92-generic"]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set Kernel Version
        id: kernel
        run: |
          if [ "${{ matrix.kernel_version }}" = "native" ]; then
            echo "version=$(uname -r)" >> "$GITHUB_OUTPUT"
          else
            echo "version=${{ matrix.kernel_version }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git curl sparse bc
          sudo apt-get install -y linux-headers-${{ steps.kernel.outputs.version }}

      - name: Run Linux Coding Style Check (checkpatch.pl) [native only]
        if: matrix.kernel_version == 'native'
        run: |
          curl -sL "https://raw.githubusercontent.com/torvalds/linux/master/scripts/checkpatch.pl" -o checkpatch.pl
          chmod +x checkpatch.pl
          ./checkpatch.pl --no-tree --file mod/*.c || true

      - name: Build Module with Sparse Analysis
        working-directory: mod
        run: |
          make -C "/lib/modules/${{ steps.kernel.outputs.version }}/build" M="$(pwd)" C=2 CHECK=sparse modules

      - name: Show Module Info
        run: |
          MOD_PATH="mod/piuio.ko"
          if [ -f "$MOD_PATH" ]; then
            sudo modinfo "$MOD_PATH"
          else
            echo "ERROR: Module file $MOD_PATH not found!" && exit 1
          fi

      - name: Load and Unload Module [native kernel only]
        if: matrix.kernel_version == 'native'
        run: |
          MOD_PATH="mod/piuio.ko"
          sudo insmod "$MOD_PATH" || { dmesg | tail -20; exit 1; }
          sleep 2
          dmesg | tail -20 | grep -Ei '(BUG|panic|oops|warn|error)' && exit 1 || echo "No critical errors detected."
          sudo rmmod piuio_hid
          echo "Module loaded and unloaded successfully."
